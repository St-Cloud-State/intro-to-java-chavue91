Script started on 2025-09-07 03:48:39+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="238" LINES="19"]
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ cat Person.java
[?2004lpublic class Person {
    
    private String firstName;
    private String lastName;
    private String id; 

    
    public Person(String firstName, String lastName, String id) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.id = id;
    }

   
    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public String getId() {
        return id;
    }

   
    public String toString() {
        return "Person [ID=" + id + ", First Name=" + firstName + ", Last Name=" + lastName + "]";
    }
}
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ cat PersonList.java
[?2004limport java.io.*;
import java.util.LinkedList;
import java.util.Scanner;

public class PersonList {
    private LinkedList<Person> people;

    // Constructor
    public PersonList() {
        people = new LinkedList<>();
    }

    // Store persons from an input stream
    public void store(InputStream in) {
        Scanner sc = new Scanner(new InputStreamReader(in));
        while (sc.hasNextLine()) {
            String line = sc.nextLine().trim();
            if (line.isEmpty() || line.startsWith("#")) continue;

            String[] parts = line.split(",");
            String first = parts[0].trim();
            String last  = parts[1].trim();
            String id    = parts[2].trim();

            people.add(new Person(first, last, id));
        }
        sc.close();
    }

    // Display all persons
    public void display(PrintStream out) {
        for (Person p : people) {
            out.println(p);
        }
    }

    // Find person by id, return index or -1
    public int find(String sid) {
        int idx = 0;
        for (Person p : people) {
            if (p.getId().equals(sid)) return idx;
            idx++;
        }
        return -1;
    }
}
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ cat MyMainlha[K[K[K.hava[K[K[K[Kjava
[?2004limport java.io.*;

public class MyMain {
    public static void main(String[] args) throws Exception {
        PersonList list = new PersonList();

        // Load persons from file
        FileInputStream in = new FileInputStream("persons.txt");
        list.store(in);
        in.close();

        // Display
        System.out.println("All people:");
        list.display(System.out);

        // Test find()
        System.out.println();
        System.out.println("find(\"A123\") -> " + list.find("A123"));
        System.out.println("find(\"B456\") -> " + list.find("B456"));
        System.out.println("find(\"XYZ\")  -> " + list.find("XYZ"));
    }
}
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ cat persons.txt
[?2004lAlice,Johnson,A123
Bob,Smith,B456
Cha,Vue,C789
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ javac Person.hja[K[K[Kjava PersonList.java MyMain.java
[?2004l[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ java MyMain
[?2004lAll people:
Person [ID=A123, First Name=Alice, Last Name=Johnson]
Person [ID=B456, First Name=Bob, Last Name=Smith]
Person [ID=C789, First Name=Cha, Last Name=Vue]

find("A123") -> 0
find("B456") -> 1
find("XYZ")  -> -1
[?2004h[0;32m@chavue91 [0mâžœ [1;34m/workspaces/intro-to-java-chavue91/HwQ3 [0;36m([1;31mmain[0;36m) [0m$ exit
[?2004lexit

Script done on 2025-09-07 03:50:33+00:00 [COMMAND_EXIT_CODE="0"]
